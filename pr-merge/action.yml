name: "Write PR merge meta"
description: "On merged PR, write a hidden JSON block with revert targets to the closed issue (or PR if no issue)."
runs:
  using: "composite"
  steps:
    - name: Write merge meta comment
      uses: actions/github-script@v7
      with:
        script: |
          const repo = context.repo;
          const prNum = context.payload.pull_request.number;

          // Load fresh PR
          const { data: pr } = await github.rest.pulls.get({ ...repo, pull_number: prNum });

          // Determine merge method & revert targets
          const mergeSha = pr.merge_commit_sha || null;

          async function parentCount(sha) {
            if (!sha) return 0;
            const { data: c } = await github.rest.git.getCommit({ ...repo, commit_sha: sha });
            return (c.parents || []).length;
          }

          let merge_method = 'unknown';
          let merge_artifact_shas = [];

          if (mergeSha) {
            const pcount = await parentCount(mergeSha);
            if (pcount >= 2) {
              merge_method = 'merge';            // revert with -m 1
              merge_artifact_shas = [mergeSha];
            } else {
              merge_method = 'squash';           // revert directly
              merge_artifact_shas = [mergeSha];
            }
          } else {
            // Likely "rebase & merge": revert the PR's commits as a series (reverse later)
            merge_method = 'rebase';
            const commits = await github.paginate(
              github.rest.pulls.listCommits,
              { ...repo, pull_number: prNum, per_page: 100 }
            );
            merge_artifact_shas = commits.map(c => c.sha);
          }

          // Try to find the first closed issue via closing keywords in PR body
          const body = pr.body || '';
          const m = body.match(/\b(?:close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#(\d+)\b/i);
          const issue_number = m ? Number(m[1]) : null;

          const meta = {
            pr: pr.number,
            pr_url: pr.html_url,
            branch: pr.head.ref,
            base: pr.base.ref,
            source_head_sha: pr.head.sha,
            merge_method,
            merge_artifact_shas,
            merge_commit_sha: mergeSha,   // null for rebase
            merged_at: pr.merged_at
          };

          const hidden = ['<!-- pr-merge-meta:', JSON.stringify(meta), '-->'].join('\n');

          if (issue_number) {
            await github.rest.issues.createComment({ ...repo, issue_number, body: hidden });
          } else {
            await github.rest.issues.createComment({ ...repo, issue_number: pr.number, body: hidden });
          }
